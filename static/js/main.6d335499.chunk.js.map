{"version":3,"sources":["context.js","components/Contact.js","components/Contacts.js","components/Header.js","components/About.js","components/TextInputGroup.js","components/AddContact.js","components/EditContact.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onClickDropDown","prevState","onClickDelete","delete","t0","_this2","_this$props$contact","className","onClick","onKeyPress","role","tabIndex","style","cursor","marginLeft","float","color","bind","Link","to","marginRight","Contacts","Fragment","components_Contact","Header","_ref","appName","href","About","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","event","defineProperty","target","onSubmit","_this$state","newContact","res","preventDefault","abrupt","post","history","push","_this$state2","components_TextInputGroup","EditContact","updateContact","match","params","put","NotFound","App","context_Provider","HashRouter","components_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d335499.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? (contact = action.payload) : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends React.Component {\n  // state is kept only within the Provider component\n\n  state = {\n    // eslint-disable-next-line react/no-unused-state\n    contacts: [\n      {\n        id: 1,\n        name: \"Micheal Moore\",\n        email: \"michaelmoore@gmail.com\",\n        phone: \"447-854-698\"\n      },\n      {\n        id: 2,\n        name: \"Michelle Smith\",\n        email: \"michelle@gmail.com\",\n        phone: \"558-954-235\"\n      },\n      {\n        id: 3,\n        name: \"Marianne Waltz\",\n        email: \"marianne@gmail.com\",\n        phone: \"668-974-245\"\n      }\n    ],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n\n    this.setState({ contacts: response.data });\n  }\n\n  render() {\n    return (\n      // state is passed in value property within Context.Provider component\n\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const { Consumer } = Context.Consumer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Consumer } from \"../context\";\n\nclass Contact extends React.Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onClickDropDown = () => {\n    this.setState(prevState => ({\n      showContactInfo: !prevState.showContactInfo\n    }));\n  };\n\n  onClickDelete = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                <i\n                  onClick={this.onClickDropDown}\n                  onKeyPress={this.onClickDropDown}\n                  role=\"button\"\n                  tabIndex=\"0\"\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\", marginLeft: \"5px\" }}\n                />\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onClickDelete.bind(this, id, dispatch)}\n                  onKeyPress={this.onClickDelete}\n                  role=\"button\"\n                  tabIndex=\"0\"\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">{email}</li>\n                  <li className=\"list-group-item\">{phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React from \"react\";\nimport Contact from \"./Contact\";\n\nimport { Consumer } from \"../context\";\n\nclass Contacts extends React.Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-info\">Contact</span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Header = ({ appName }) => (\n  <nav className=\"navbar navbar-expand-sm navbar-dark bg-info mb-3 py-0\">\n    <div className=\"container\">\n      <a href=\"/\" className=\"navbar-brand\">\n        {appName}\n      </a>\n      <div>\n        <ul className=\"navbar-nav mr-a\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fas fa-home\"/> Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fas fa-plus\"/> Add\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fas fa-question\"/> About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nHeader.propTypes = {\n  appName: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport const About = () => (\n  <div>\n    <h1 className=\"display-4\">Contact Handler</h1>\n    <p className=\"lead\">Manage your contacts</p>\n    <p className=\"text-secondary\">Version 1.0</p>\n  </div>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({ label, name, value, placeholder, type, onChange, error }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        value={value}\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\"is-invalid\": error})}\n        placeholder={placeholder}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nexport default TextInputGroup;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Consumer } from \"../context\";\nimport TextInputGroup from \"./TextInputGroup\";\n\nclass AddContact extends React.Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onChange = event =>\n    this.setState({ [event.target.name]: event.target.value });\n\n  onSubmit = async (dispatch, event) => {\n    event.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // validate empty form fields\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone number is required\" } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    });\n\n    // redirect to wherever you want take the user on submit\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    value={name}\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter name\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    value={email}\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter email\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    value={phone}\n                    label=\"Phone\"\n                    type=\"text\"\n                    name=\"phone\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter phone number\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Consumer } from \"../context\";\nimport TextInputGroup from \"./TextInputGroup\";\n\nclass EditContact extends React.Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n     });\n  }\n\n  onChange = event =>\n    this.setState({ [event.target.name]: event.target.value });\n\n  onSubmit = async (dispatch, event) => {\n    event.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // validate empty form fields\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone number is required\" } });\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    // clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\"\n    });\n\n    // redirect to wherever you want take the user on submit\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    value={name}\n                    label=\"Name\"\n                    type=\"text\"\n                    name=\"name\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter name\"\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    value={email}\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter email\"\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    value={phone}\n                    label=\"Phone\"\n                    type=\"text\"\n                    name=\"phone\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Enter phone number\"\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};","import React, { Component } from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Contacts from \"./components/Contacts\";\nimport Header from \"./components/Header\";\nimport { About } from \"./components/About\";\nimport AddContact from \"./components/AddContact\";\nimport EditContact from \"./components/EditContact\";\nimport NotFound from \"./components/NotFound\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header appName=\"Contact Handler\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts}/>\n                <Route exact path=\"/contact/add\" component={AddContact}/>\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                <Route exact path=\"/about\" component={About}/>\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}